setwd("C:/Users/janninma/Documents/Formations/productive-r-workflow/")
# Ask R to read a file that is located in this directory
data <- read.csv("data.csv")
# Set the working directory
setwd("C:/Users/janninma/Documents/Formations/productive-r-workflow/R/")
# Ask R to read a file that is located in this directory
data <- read.csv("data.csv")
# Set the working directory
setwd("C:/Users/janninma/Documents/Formations/productive-r-workflow/input/")
# Ask R to read a file that is located in this directory
data <- read.csv("data.csv")
getwd()
##### Introduction ####
data <- readr::read_csv("input/data.csv")
View(data)
#### Lire directement à partir d'excel ####
# Load the package (not that it is not part of the core tidyverse!)
library(readxl)
# Read a file
data <- read_excel("data.xlsx")
# Read a file
data <- read_excel("data.xlsx")
# Read a file
data <- read_excel("input/data.xlsx")
View(data)
View(data)
# Read a file
data <- read_excel("input/data.xlsx", na = NA)
# Read a file
data <- read_excel("input/data.xlsx", na = "NA")
View(data)
multiply <- function(a) {
return(a * 311)
}
multiply(234)
multiplyBy234 <- function(a) {
return(a * 311)
}
multiply(234)
addition <- function(b) {
return(b + 8934)
}
addition(3256)
sum_two_numbers <- function(a, b) {
return(a + b)
} # correction
sum_two_number(3256 + 8934)
sum_two_number(3256, 8934)
sum_two_number(3256, 8934)
a <- 3256
b <- 8934
sum_two_numbers <- function(a, b) {
return(a + b)
} # correction
sum_two_numbers()
a <- 3256
b <- 8934
sum_two_numbers()
sum_two_numbers(a = 3256)
sum_two_numbers(a = 3256, b = 8934)
f <- function(number) {
return(number %% 2 == 0)
}
# Plot
penguins_clean <- na.omit(data)
# Plot using ggplot2
data %>%
na.omit() %>%
ggplot(aes(x = bill_length_mm, y = bill_depth_mm, color = species, shape = species)) +
geom_point() +
labs(x = "Bill Length (mm)", y = "Bill Depth (mm)", title = "Penguin Bill Dimensions") +
scale_shape_manual(values = c("Adelie" = 16, "Chinstrap" = 17, "Gentoo" = 18))
library(dplyr)
library(ggplot2)
library(tidyverse)
# Plot using ggplot2
data %>%
na.omit() %>%
ggplot(aes(x = bill_length_mm, y = bill_depth_mm, color = species, shape = species)) +
geom_point() +
labs(x = "Bill Length (mm)", y = "Bill Depth (mm)", title = "Penguin Bill Dimensions") +
scale_shape_manual(values = c("Adelie" = 16, "Chinstrap" = 17, "Gentoo" = 18))
ggplot <- function(a) {
return(ggplot(aes(x = bill_length_mm, y = bill_depth_mm, color = species, shape = species)) +
geom_point() +
labs(x = "Bill Length (mm)", y = "Bill Depth (mm)", title = "Penguin Bill Dimensions") +
scale_shape_manual(values = c("Adelie" = 16, "Chinstrap" = 17, "Gentoo" = 18))
)
}
ggplot
# devoir :
# plot function
create_scatterplot <- function(data, selected_species, selected_island) {
# filter the data
filtered_data <- data %>%
na.omit() %>%
filter (species == selected_species, island == selected_island)
# create the scatterplot
plot <- ggplot (
filtered_data,
aes(x = bill_length_mm, y = bill_depth_mm, color = species, shape = species
) +
geom_point() +
labs (
x = "Bill Length (mm)",
y = "Bill Depth (mm)",
title = paste ("Pinguin Bill Dimension -", selected_species, "-", selected_island)
))
return(plot)
}
create_scatterplot(data, "Adeline", "Torgersen")
create_scatterplot(data, "Adelie", "Torgersen")
create_scatterplot(data, "Adelie", "Torgersen")
# devoir :
# plot function
create_scatterplot <- function(data, selected_species, selected_island) {
# filter the data
filtered_data <- data %>%
na.omit() %>%
filter (species == selected_species, island == selected_island)
# create the scatterplot
plot <- ggplot (
filtered_data,
aes(x = bill_length_mm, y = bill_depth_mm, color = species, shape = species
) +
geom_point() +
labs (
x = "Bill Length (mm)",
y = "Bill Depth (mm)",
title = paste ("Pinguin Bill Dimension -", selected_species, "-", selected_island)
))
return(plot)
}
create_scatterplot(data, "Adelie", "Torgersen")
# plot function
create_scatterplot <- function(data, selected_species, selected_island) {
# Filter the data for the specified species and island
filtered_data <- data %>%
na.omit() %>%
filter(species == selected_species, island == selected_island)
# Create the scatterplot
plot <- ggplot(
filtered_data,
aes(x = bill_length_mm, y = bill_depth_mm, color = species, shape = species)
) +
geom_point() +
labs(
x = "Bill Length (mm)",
y = "Bill Depth (mm)",
title = paste("Penguin Bill Dimensions -", selected_species, "-", selected_island)
)
return(plot)
}
# Use the function
create_scatterplot(data, "Adelie", "Torgersen")
library(dplyr)
library(ggplot2)
library(tidyverse)
# devoir :
# plot function
create_scatterplot <- function(data, selected_species, selected_island) {
# filter the data
filtered_data <- data %>%
na.omit() %>%
filter (species == selected_species, island == selected_island)
# create the scatterplot
plot <- ggplot (
filtered_data,
aes(x = bill_length_mm, y = bill_depth_mm, color = species, shape = species
) +
geom_point() +
labs (
x = "Bill Length (mm)",
y = "Bill Depth (mm)",
title = paste ("Pinguin Bill Dimension -", selected_species, "-", selected_island)
))
return(plot)
}
create_scatterplot(data, "Adelie", "Torgersen")
# Load necessary libraries
library(ggplot2)
library(dplyr)
# Define the scatterplot function
create_scatterplot <- function(data, selected_species, selected_island) {
# Filter the data for the specified species and island
filtered_data <- data %>%
na.omit() %>%
filter(species == selected_species, island == selected_island)
# Create the scatterplot
plot <- ggplot(
filtered_data,
aes(x = bill_length_mm, y = bill_depth_mm, color = species, shape = species)
) +
geom_point() +
labs(
x = "Bill Length (mm)",
y = "Bill Depth (mm)",
title = paste("Penguin Bill Dimensions -", selected_species, "-", selected_island)
)
return(plot)
}
# Use the function
create_scatterplot(data, "Adelie", "Torgersen")
# Define the scatterplot function
create_scatterplot <- function(data, selected_species, selected_island) {
# Filter the data for the specified species and island
filtered_data <- data %>%
na.omit() %>%
filter(species == selected_species, island == selected_island)
# Create the scatterplot
plot <- ggplot(
filtered_data,
aes(x = bill_length_mm, y = bill_depth_mm, color = species, shape = species)
) +
geom_point() +
labs(
x = "Bill Length (mm)",
y = "Bill Depth (mm)",
title = paste("Penguin Bill Dimensions -", selected_species, "-", selected_island)
)
return(plot)
}
# Use the function
create_scatterplot(data, "Adelie", "Torgersen")
View(data)
# Set the working directory
setwd("C:/Users/janninma/Documents/Formations/productive-r-workflow/input/")
# Ask R to read a file that is located in this directory
data <- read.csv("data.csv")
# devoir :
# plot function
# Load necessary libraries
library(ggplot2)
library(dplyr)
# Define the scatterplot function
create_scatterplot <- function(data, selected_species, selected_island) {
# Filter the data for the specified species and island
filtered_data <- data %>%
na.omit() %>%
filter(species == selected_species, island == selected_island)
# Create the scatterplot
plot <- ggplot(
filtered_data,
aes(x = bill_length_mm, y = bill_depth_mm, color = species, shape = species)
) +
geom_point() +
labs(
x = "Bill Length (mm)",
y = "Bill Depth (mm)",
title = paste("Penguin Bill Dimensions -", selected_species, "-", selected_island)
)
return(plot)
}
# Use the function
create_scatterplot(data, "Adelie", "Torgersen")
library(ggplot2)
# Define the scatterplot function
create_scatterplot <- function(data, selected_species, selected_island) {
# Filter the data for the specified species and island
filtered_data <- data %>%
na.omit() %>%
filter(species == selected_species, island == selected_island)
# Create the scatterplot
plot <- ggplot(
filtered_data,
aes(x = bill_length_mm, y = bill_depth_mm, color = species, shape = species)
) +
geom_point() +
labs(
x = "Bill Length (mm)",
y = "Bill Depth (mm)",
title = paste("Penguin Bill Dimensions -", selected_species, "-", selected_island)
)
return(plot)
}
# Use the function
create_scatterplot(data, "Adelie", "Torgersen")
View(data)
source(file="R/functions.R")
source(file="R/functions.R")
### Utiliser les projets Rstudio ####
getwd() # pour vérifier le dossier dans lequel R recherche les fichiers.
#### Diviser votre travail ####
library(tidyverse)
library(readxl)
# Source functions
source(file="R/functions.R")
# Read data using readxl
data <- read_excel("input/data.xlsx", na = "NA")
getwd()
# Read data using readxl
data <- read_excel("input/data.xlsx", na = "NA")
##### Introduction ####
data <- readr::read_csv("input/data.csv")
##### Introduction ####
data <- readr::read_csv("input/data.csv")
##### Introduction ####
data <- readr::read_csv("input/data.csv")
library(dplyr)
library(ggplot2)
library(tidyverse)
library(tidyverse)
library(readxl)
# Source functions
source(file="R/functions.R")
# Read data using readxl
data <- read_excel("input/data.xlsx", na = "NA")
# Summary
summary(data)
# Calculating mean bill length for different species and islands using dplyr
data %>%
filter(species == "Adelie") %>%
group_by(island) %>%
summarize(mean_bill_length = round(mean(bill_length_mm, na.rm = TRUE), 2))
# Use the function in functions.R
create_scatterplot(data, "Adelie", "Torgersen")
# Use the function
create_scatterplot(data, "Adelie", "Torgersen")
# Use the function in functions.R
create_scatterplot(data, "Adelie", "Torgersen")
# Remove 2 rows that are known to be wrong
clean_data <- data %>%
slice(-c(23, 48))
# Remove 2 rows that are known to be wrong
clean_data <- data %>%
slice(-c(23, 48))
# Save in RDS format
saveRDS(clean_data, file = "input/clean_data.rds")
#### Diviser votre travail ####
readRDS("01_load_clean_data.R")
#### Diviser votre travail ####
data <- readRDS(file = "input/clean_data.rds")
#### Diviser votre travail ####
data <- readRDS(file = "input/clean_data.rds")
citation("tidyverse")
library(rmarkdown)
1 + 1
1 + 1
#| echo: false
2 * 2
#| echo: false
2 * 2
library(ggplot2)
library(dplyr)
library(tidyverse)
library(readxl)
# Source functions
source(file="R/functions.R")
library(tidyverse)
# Source functions
source(file="functions.R")
# Read data using readxl
data <- readRDS(file = "input/clean_data.rds")
# Read data using readxl
data <- readRDS(file = ".../input/clean_data.rds")
# Read data using readxl
data <- readRDS(file = "../input/clean_data.rds")
# Summary
summary(data)
# Calculating mean bill length for different species and islands using dplyr
data %>%
filter(species == "Adelie") %>%
group_by(island) %>%
summarize(mean_bill_length = round(mean(bill_length_mm, na.rm = TRUE), 2))
# Use the function in functions.R
create_scatterplot(data, "Adelie", "Torgersen")
```{r}
# Summary
summary(data)
# Calculating mean bill length for different species and islands using dplyr
data %>%
filter(species == "Adelie") %>%
group_by(island) %>%
summarize(mean_bill_length = round(mean(bill_length_mm, na.rm = TRUE), 2))
# Use the function in functions.R
create_scatterplot(data, "Adelie", "Torgersen")
# Calculating mean bill length for different species and islands using dplyr
data %>%
filter(species == "Adelie") %>%
group_by(island) %>%
summarize(mean_bill_length = round(mean(bill_length_mm, na.rm = TRUE), 2))
# Summary
summary(data)
# Summary
summary(data)
# load the tidyverse
library(tidyverse)
# Source functions
source(file="functions.R")
# Read the clean dataset
data <- readRDS(file = "../input/clean_data.rds")
# Summary
summary(data)
# Calculating mean bill length for different species and islands using dplyr
data %>%
filter(species == "Adelie") %>%
group_by(island) %>%
summarize(mean_bill_length = round(mean(bill_length_mm, na.rm = TRUE), 2))
# Use the function in functions.R
create_scatterplot(data, "Adelie", "Torgersen")
# Summary
summary(data)
# Calculating mean bill length for different species and islands using dplyr
data %>%
filter(species == "Adelie") %>%
group_by(island) %>%
summarize(mean_bill_length = round(mean(bill_length_mm, na.rm = TRUE), 2))
# Use the function in functions.R
create_scatterplot(data, "Adelie", "Torgersen")
# Summary
summary(data)
# Calculating mean bill length for different species and islands using dplyr
data %>%
filter(species == "Adelie") %>%
group_by(island) %>%
summarize(mean_bill_length = round(mean(bill_length_mm, na.rm = TRUE), 2))
# Use the function in functions.R
create_scatterplot(data, "Adelie", "Torgersen")
# Summary
summary(data)
# Calculating mean bill length for different species and islands using dplyr
data %>%
filter(species == "Adelie") %>%
group_by(island) %>%
summarize(mean_bill_length = round(mean(bill_length_mm, na.rm = TRUE), 2))
# Use the function in functions.R
create_scatterplot(data, "Adelie", "Torgersen")
# Source functions
source(file="functions.R")
# Read the clean dataset
data <- readRDS(file = "../input/clean_data.rds")
# load the tidyverse
library(tidyverse)
# load the tidyverse
library(tidyverse)
# load the tidyverse
library(tidyverse)
# load the tidyverse
library(tidyverse)
![](culmen_depth.png){fig-alt="Culmen depth", fig-align="left" width=300}
![](culmen_depth.png){fig-alt="Culmen depth" fig-align="left" width=300}
![Bill measurement explanation](../culmen_depth.png){width=300}
![Bill measurement explanation](C:/Users/janninma/Documents/Formations/productive-r-workflow/culmen_depth.png){width=300}
```{r}
![Bill measurement explanation](asset/culmen_depth.png){width=300}
#| layout-ncol: 2
data %>%
group_by(species) %>%
summarise(average_bill_length = mean(bill_length_mm, na.rm = T))
---
title: "Penguin Analysis"
# load the tidyverse
library(tidyverse)
library(hrbrthemes)    # ipsum theme for ggplot2 charts
library(patchwork)     # combine charts together
# Source functions
source(file="functions.R")
# Read the clean dataset
data <- readRDS(file = "../input/clean_data.rds")
# Summary
summary(data)
# Calculating mean bill length for different species and islands using dplyr
data %>%
filter(species == "Adelie") %>%
group_by(island) %>%
summarize(mean_bill_length = round(mean(bill_length_mm, na.rm = TRUE), 2))
# Use the function in functions.R
create_scatterplot(data, "Adelie", "Torgersen")
#| layout-ncol: 2
data %>%
group_by(species) %>%
summarise(average_bill_length = mean(bill_length_mm, na.rm = T))
data %>%
group_by(species) %>%
summarise(average_bill_depth = mean(bill_depth_mm, na.rm = T))
# Use the function in functions.R
p1 <- create_scatterplot(data, "Adelie", "6689c6")
p2 <- create_scatterplot(data, "Chinstrap", "e85252")
p3 <- create_scatterplot(data, "Gentoo", "9a6fb0")
p1 + p2 + p3
# Summary
summary(data)
# Calculating mean bill length for different species and islands using dplyr
data %>%
filter(species == "Adelie") %>%
group_by(island) %>%
summarize(mean_bill_length = round(mean(bill_length_mm, na.rm = TRUE), 2))
# Use the function in functions.R
create_scatterplot(data, "Adelie", "Torgersen")
# Use the function in functions.R
p1 <- create_scatterplot(data, "Adelie", "6689c6")
p2 <- create_scatterplot(data, "Chinstrap", "e85252")
p3 <- create_scatterplot(data, "Gentoo", "9a6fb0")
p1 + p2 + p3
# Use the function in functions.R
p1 <- create_scatterplot(data, "Adelie", "#6689c6")
# Use the function in functions.R
p1 <- create_scatterplot(data, "Adelie", "#6689c6")
p2 <- create_scatterplot(data, "Chinstrap", "#e85252")
p3 <- create_scatterplot(data, "Gentoo", "#9a6fb0")
p1 + p2 + p3
# Use the function in functions.R
p1 <- create_scatterplot(data, "Adelie", "#6689c6")
p2 <- create_scatterplot(data, "Chinstrap", "#e85252")
p3 <- create_scatterplot(data, "Gentoo", "#9a6fb0")
p1 + p2 + p3
p1
# Use the function in functions.R
p1 <- create_scatterplot(data, "Adelie", "#6689c6")
![Bill measurement explanation](../asset/culmen_depth.png){width="300"}
install.packages("DT")
install.packages("plotly")
